
--INGRESAR_NUEVO_LIBRO_GRUPO#B
CREATE PROCEDURE INGRESAR_NUEVO_LIBRO_GRUPO#B
	-- Add the parameters for the stored procedure here
	
	@Titulo varchar(50),
	@Editorial varchar(50),
	@Area varchar(50),
	@IDAutor varchar(50)
AS
BEGIN
SET NOCOUNT ON;

    -- Insert statements for procedure here

	INSERT INTO [dbo].[Libro]

	VALUES (@Titulo,@Editorial, @Area, @IDAutor)
END
GO

--INGRESAR_NUEVO_AUTOR_PRESETAMO_DE_LIBRO#B

CREATE PROCEDURE INGRESAR_NUEVO_AUTOR_PRESETAMO_DE_LIBRO#B
	-- Add the parameters for the stored procedure here
	
	@Nombre varchar(50),
	@Ncionalidad varchar(50)

AS
BEGIN
SET NOCOUNT ON;

    -- Insert statements for procedure here

	INSERT INTO [dbo].[Autor]

	VALUES (@Nombre,@Ncionalidad)
END
GO



--[INGRESAR_NUEVO_ESTUDIANTE#GRUPOB]
USE [BibliotecaGrupoB]
GO
/****** Object:  StoredProcedure [dbo].[INGRESAR_NUEVO_ESTUDIANTE#GRUPOB]    Script Date: 1/13/2022 9:45:59 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[INGRESAR_NUEVO_ESTUDIANTE#GRUPOB]
	-- Add the parameters for the stored procedure here
	
@CI varchar(50),
@Nombre varchar(50),
@Direccion varchar(50),
@Carrera varchar(100),
@Edad int,
@Celular int

AS
BEGIN
SET NOCOUNT ON;

    -- Insert statements for procedure here

	INSERT INTO [dbo].[Estudiante]

	VALUES (@CI,@Nombre,@Direccion ,@Carrera,@Edad ,@Celular)
END




--FORMATO DE FECHA SEGUN VISUAL C#


declare @Existingdate2 datetime
Set @Existingdate2=GETDATE()
Select CONVERT(varchar,@Existingdate2,22) as [M DD YYYY hh:mm:ss(AM/PM)]



--SUMAR 10 DIAS A LA FECHA ACTUAL
DATEADD(day, 10, GETDATE())

-- EDITAR_LIBRO_GRUPO#B

CREATE PROCEDURE EDITAR_LIBRO_GRUPO#B
	-- Add the parameters for the stored procedure here
	@IDLibro INT,
	@Titulo varchar(50),
	@Editorial varchar(50),
	@Area varchar(50)
AS
BEGIN
SET NOCOUNT ON;

    -- Insert statements for procedure here

	UPDATE [dbo].[Libro]
	SET [Titulo] = @Titulo,[Editorial] =@Editorial,[Area] = @Area
	WHERE [IDLibro]  = @IDLibro 
	 



END
GO

--BUSCAR_LIBRO_POR_ID_GRUPO#B

CREATE PROCEDURE [dbo].[BUSCAR_LIBRO_POR_ID_GRUPO#B]
	-- Add the parameters for the stored procedure here
	@IDLibro INT

AS
BEGIN
SET NOCOUNT ON;

    -- Insert statements for procedure here

	SELECT * 
	
	FROM  [dbo].[Libro]
	WHERE [IDLibro]  = @IDLibro

END

--EDITAR_ESTUDIANTE#GRUPOB
CREATE PROCEDURE EDITAR_ESTUDIANTE#GRUPOB
	-- Add the parameters for the stored procedure here
@IDLector INT,	
@CI varchar(50),
@Nombre varchar(50),
@Direccion varchar(50),
@Carrera varchar(100),
@Edad int,
@Celular int

AS
BEGIN
SET NOCOUNT ON;

    -- Insert statements for procedure here

	UPDATE [dbo].[Estudiante]

	SET [CI] = @CI,[Nombre]= @Nombre , [Direccion] =@Direccion,[Carrera] =  @Carrera,[Edad] =@Edad ,
[Celular] = @Celular

WHERE [IDLector] =@IDLector
END


--TRIGGERS PARA SUMAR Y RESTAR STOCK EN LIBROS:

USE [VLAPractica]
GO
/****** Object:  Trigger [dbo].[TR_Empleados_Room2]    Script Date: 1/18/2022 1:32:43 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TRIGGER  [dbo].[SUMAR_STOCKLIBROS]
   ON  [dbo].[prestamo]
   AFTER INSERTED
AS 

DECLARE @idlibro AS INT

select @idlibro = i.idlibro from inserted i

BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for trigger here



	UPDATE [dbo].[libro]

	SET [stock] = [stock] - 1
	WHERE [idlibro] = @idlibro


	

END
